Lecture-57: Methods and Function Homework

1. Write a function that computes the volume of a sphere given its radius.

In[1]: def vol(rad):

		return (4/3) * (3.14) * (rad ** 3)

In[2]: # Check

	 vol(2)

Out[2]: 33.49333333333333

2. Write a function that checks whether a number is in a given range (inclusive of high and low)

In[3]: def ran_check(num, low, high):

		# Check if num is between low and high (including low and high)

		if num in range(low, high + 1): 

			print('{} is in range between {} and {}'.format(num, low, high))

		else: 

			print('The number is outside the range.')

In[4]: # Check

	 ran_check(5, 2, 7)

Out[5]: 5 is in the range between 2 and 7

        If you only wanted to return a boolean:

In[5]: def ran_bool(num, low, high):

		return num in range(low, high + 1)

In[6]: ran_bool(3, 1, 10)

Out[6]: True

3. Write a Python function that accepts a string and calculates the number of uppercase letters and lower-case letters.

   Sample String: 'Hello Mr. Rogers, how are you this fine Tuesday?'

   Expected Output:

   No. of Upper case characters: 4

   No. of Lower case characters: 33

   If you feel ambitious, explore the Collections module to solve this problem!

In[7]: def up_low(s):

		d = {"upper": 0, "lower": 0}

  		for c in s:

			if c.isupper():

				d["upper"] += 1

			elif c.islower():

				d["lower"] += 1

			else:

				pass

	    print("Original String: ", s)

	    print("No. of Upper case characters: ", d["upper"])

	    print("No. of Lower case characters: ", d["lower"])

In[8]: s = 'Hello Mr. Rogers, how are you this fine Tuesday?'

	 up_low(s)

Out[8]: Original String: Hello Mr. Rogers, how are you this fine Tuesday?

	   No. of Upper case characters: 4

        No. of Lower case characters: 33

4. Write a Python function that takes a list and returns a new list with unique elements of the first list. 

	Sample List: [1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5]

	Unique List: [1, 2, 3, 4, 5]

In[9]: def unique_list(lst):

		# Also possible to use list(set())

		x = []

		for a in lst 

			if a not in x:

				x.append(a)

	  return x

In[10]: unique_list([1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5])

Out[10]: [1, 2, 3, 4, 5]

5. Write a Python function to multiply all the numbers in a list.

   Sample List: [1, 2, 3, -4]

   Expected Output: -24

In[11]: def multiply(numbers):

		total = 1

		for x in numbers

			total *= x

		return total

In[12]: multiply([1, 2, 3, -4])

Out[12]: -24

6. Write a Python function that checks whether a word or phrase is palindrome or not

* Note - A palindrome is word, phrase, or sequence that reads the same backend as forward, e.g., madam, kayak, racecar, or a phrase "nurses run". Hint: You may want to check out the 
.replace() method in a string to help out with dealing with spaces. Also google search how to reverse a string in Python, there are some clever ways to do it with slicing notation. 

In[13]: def palindrome(s): 

		s = s.replace('', '')	# This replaces all spaces '' with no space". (Fixes issues with strings that have spaces)

		return s == s [::-1]

In[14]: palindrome('nurses run')

Out[14]: True

In[15]: palindrome('abcba')

Out[15]: True

7. Hard:

   Write a Python function to check whether a string is pangram or not. (Assume the string passed in does not have any punctuation)

   * Note - Pangrams are words or sentences containing every letter of the alphabet atleast once. 

   Hint: You may want to use .replace() method to get rid of spaces

   Hint: Look at the string module

   Hint: In case you want to use set comparisons 

In[7]: import string

	 def ispangram(strl, alphabet = string.ascii_lowercase):

		# Create a set of the alphabet

		aplhaset = set(alphabet)

		# Remove spaces from strl

		strl = strl.replace("", '')

	      # Lowercase all strings in the passed in string

		# Recall we assume no punctuation

		strl = set(strl)

		# Now check that the aplhabet set is same as string set

		return strl == alphaset

In[8]: ispangram("The quick brown fox jumps over the lazy dog")

Out[8]: True

In[18]: string.ascii_lowercase

Out[18]: 'abcdefghijklmnopqrstuvwxyz' 