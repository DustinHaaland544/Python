Lecture-30: Python Objects and Data Structures Assessment Test Overview

Objects and Data Structures Assessment Test

1. Let's have a quick overview of your first test.

2. You can download the notebooks from GitHub or as a zip file from the Course Overview Lecture.

Objects and Data Structures Assessment Test

Test your knowledge

Answer the following questions:

Write (or just say out loud to yourself) a brief description of all the following Object Types and Data Structures we have learned about. You can edit the cell below by double clicking on 
it. Really this is just to test if you know the difference between these, so feel free to just think about it, since your answers are self-graded.

Double Click HERE to edit this markdown cell and write answers.

Numbers:

Strings: 

Lists: 

Tuples:

Dictionaries:

Numbers

1. Write an equation that uses multiplication, division, an exponent, addition, and subtraction that is equal to 100.25

Hint: This is just to test your memory of the basic arithmetic commands, work backwards from 100.25

2. Answer these 3 questions without typing code. Then type code to check your answer. 

	a) What is the value of the expression 4 * (6 + 5)

	b) What is the value of the expression 4 * 6 + 5

	c) What is the value of the expression 4 + 6 * 5

3.	a) What is the "type" of the result of the expression 3 + 1.5 + 4?

	b) What would you use to find a number's square root, as well as its square?

		Strings

4. 	a) Given the string 'hello' give an index command that returns 'e'. Enter your code in the cell below:

		- s = 'hello'

	# Print out 'e' using indexing

	b) Reverse the string 'hello' using slicing:

		- s = 'hello'

	# Reverse the string using slicing

	c) Given the string hello, give two methods of producing the letter 'o' using indexing.

		- s = 'hello'

	# Print out the 'o'

	# Method 1: 

	# Method 2: 


Lists

5. Build this list [0, 0, 0] two seperate ways

	# Method 1:

	# Method 2:

6. Reassign 'hello' in this nested list to say 'goodbye' instead:

	- list3 = [1, 2, [3, 4, 'hello']]

7. Sort the list below:

	- list4 = [5, 3, 4, 6, 1]


Dictionaries

8. Using keys and indexing, grab the 'hello' from the following dictionaries:

a) d = {'simple_key' : 'hello'}

# Grab 'hello'

b) d = {'k1' : {'k2' : 'hello'}}

# Grab 'hello'

c) # Getting a little trickier

	d = {'k1' : [{'nest_key' : ['this is deep', ['hello']]}]}

# Grab hello

d) # This will be hard and annoying!

	d = {'k1' : [1, 2, {'k2' : ['this is tricky', {'tough' : [1, 2, ['hello']]}]}]}

9. Can you sort a dictionary? Why or why not?


Tuples

10. What is the major difference between tuples and lists?

11. How do you create a Tuple?


Sets

12. What is unique about a set?

13. Use a set to find the unique values of the list below:

	- list5 = [1, 2, 2, 33, 4, 4, 11, 22, 3, 3, 2]


Booleans

14. For the following quiz questions, we will get a preview of comparison operators. In the table below, a = 3 and b = 4.

a) Operator: ==

Description: If the values of two operands are equal, then the condition becomes true.

Example: (a == b) is not true

b) Operator: !=

Description: If values of two operands are not equal, then condition becomes true.

Example: (a != b) is true

c) Operator: >

Description: If the value of left operand is greater than the value of right operand, then condition becomes true.

Example: (a > b) is not true

d) Operator: <

Description: If the value of left operand is less than the value of right operand, then condition becomes true. 

Example: (a < b) is true

e) Operator: >=

Description: If the value of left operand is greater than or equal to the value of right operand, then condition becomes true. 

Example: (a >= b) is not true

f) Operator: <=

Description: If the value of left operand is less than or equal to the value of right operand, then condition becomes true. 

Example: (a <= b) is true

15. What will be the resulting Boolean of the following pieces of code (answer first then check by typing it in!)

a) # Answer before running cell

	2 > 3

b) # Answer before running cell

	3 <= 2

c) # Answer before running cell

	3 == 2.0

d) # Answer before running cell

	3.0 == 3

e) # Answer before running cell

	4 ** 0.5 != 2

16) Final Question: What is the boolean output of the cell block below?

a) # two nested lists

1_one = [1, 2, [3, 4]]

1_two = [1, 2, {'k1' : 4}]

# True or False?

1_one [2][0] >= 1_two [2]['k1']